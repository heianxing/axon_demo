<?xml version="1.0" encoding="UTF-8"?>
<!--
  ~ Copyright (c) 2011. Axon Framework
  ~
  ~ Licensed under the Apache License, Version 2.0 (the "License");
  ~ you may not use this file except in compliance with the License.
  ~ You may obtain a copy of the License at
  ~
  ~ http://www.apache.org/licenses/LICENSE-2.0
  ~
  ~ Unless required by applicable law or agreed to in writing, software
  ~ distributed under the License is distributed on an "AS IS" BASIS,
  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  ~ See the License for the specific language governing permissions and
  ~ limitations under the License.
  -->

<xsd:schema xmlns="http://www.axonframework.org/schema/core"
            xmlns:xsd="http://www.w3.org/2001/XMLSchema" targetNamespace="http://www.axonframework.org/schema/core"
            xmlns:beans="http://www.springframework.org/schema/beans"
            elementFormDefault="qualified">

    <xsd:import namespace="http://www.springframework.org/schema/beans"/>

    <!-- ================================== -->
    <!-- ==== eventBus ==================== -->
    <!-- ================================== -->
    <xsd:element name="event-bus">
        <xsd:annotation>
            <xsd:documentation>
                Spring context schema extension for the definition
                of an EventBus instance.
            </xsd:documentation>
        </xsd:annotation>
        <xsd:complexType>
            <xsd:complexContent>
                <xsd:extension base="beans:identifiedType">
                    <xsd:attribute name="register-mbeans" type="xsd:boolean" use="optional">
                        <xsd:annotation>
                            <xsd:documentation>Indicate whether the mbeans should be registered or not. By default they
                                are registered.
                            </xsd:documentation>
                        </xsd:annotation>
                    </xsd:attribute>
                </xsd:extension>
            </xsd:complexContent>
        </xsd:complexType>
    </xsd:element>

    <!-- ================================== -->
    <!-- ==== commandBus ================== -->
    <!-- ================================== -->
    <xsd:element name="command-bus">
        <xsd:annotation>
            <xsd:documentation>
                Spring context schema extension for the definition
                of a CommandBus instance.
            </xsd:documentation>
        </xsd:annotation>

        <xsd:complexType>
            <xsd:complexContent>
                <xsd:extension base="beans:identifiedType">
                    <xsd:sequence>
                        <xsd:element name="interceptors" type="beans:listOrSetType"
                                     minOccurs="0" maxOccurs="1">
                            <xsd:annotation>
                                <xsd:documentation>A list of interceptors to be registered with
                                    the command bus.
                                </xsd:documentation>
                            </xsd:annotation>
                        </xsd:element>
                    </xsd:sequence>
                    <xsd:attribute name="register-mbeans" type="xsd:boolean" use="optional">
                        <xsd:annotation>
                            <xsd:documentation>Indicate whether the mbeans should be registered or not. By default they
                                are registered.
                            </xsd:documentation>
                        </xsd:annotation>
                    </xsd:attribute>
                </xsd:extension>
            </xsd:complexContent>
        </xsd:complexType>
    </xsd:element>

    <!-- ================================== -->
    <!-- == Annotation-based configuration= -->
    <!-- ================================== -->
    <xsd:element name="annotation-config">
        <xsd:annotation>
            <xsd:documentation>This element activates annotation-based
                configuration of event handling and command processing in the Axon
                framework. This relies on Spring to work.
            </xsd:documentation>
        </xsd:annotation>
        <xsd:complexType>
            <xsd:attribute name="command-bus" type="xsd:string" use="optional">
                <xsd:annotation>
                    <xsd:documentation>Explicitly select a command bus to use. If left
                        blank, a command bus will be selected from the context.
                    </xsd:documentation>
                </xsd:annotation>
            </xsd:attribute>
            <xsd:attribute name="executor" type="xsd:string" use="optional">
                <xsd:annotation>
                    <xsd:documentation>Select an executor to use for the event
                        handlers.
                    </xsd:documentation>
                </xsd:annotation>
            </xsd:attribute>
            <xsd:attribute name="event-bus" type="xsd:string" use="optional">
                <xsd:annotation>
                    <xsd:documentation>Explicitly select an event bus to use. If left
                        blank, an event bus will be selected from the context.
                    </xsd:documentation>
                </xsd:annotation>
            </xsd:attribute>
        </xsd:complexType>
    </xsd:element>

    <xsd:complexType name="eventStoreType">
        <xsd:complexContent>
            <xsd:extension base="beans:identifiedType">
                <xsd:attribute name="event-serializer" use="optional" type="xsd:string">
                    <xsd:annotation>
                        <xsd:documentation>Reference to an event serializer to use with this event store. Defaults to
                            an org.axonframework.eventstore.XStreamEventSerializer
                        </xsd:documentation>
                    </xsd:annotation>
                </xsd:attribute>
            </xsd:extension>
        </xsd:complexContent>
    </xsd:complexType>

    <!-- ================================== -->
    <!-- ===== filesystem-event-store ===== -->
    <!-- ================================== -->
    <xsd:element name="filesystem-event-store">
        <xsd:annotation>
            <xsd:documentation>Spring context schema extension for the definition
                of an EvenStore instance.
            </xsd:documentation>
        </xsd:annotation>
        <xsd:complexType>
            <xsd:complexContent>
                <xsd:extension base="eventStoreType">
                    <xsd:attribute name="base-dir" use="required" type="xsd:string">
                        <xsd:annotation>
                            <xsd:documentation>The base directory for this event store.
                            </xsd:documentation>
                        </xsd:annotation>
                    </xsd:attribute>
                </xsd:extension>
            </xsd:complexContent>
        </xsd:complexType>
    </xsd:element>

    <!-- ================================== -->
    <!-- ======== jpa-event-store ========= -->
    <!-- ================================== -->
    <xsd:element name="jpa-event-store">
        <xsd:annotation>
            <xsd:documentation>Spring context schema extension for the definition
                of an EvenStore instance.
            </xsd:documentation>
        </xsd:annotation>
        <xsd:complexType>
            <xsd:complexContent>
                <xsd:extension base="eventStoreType">
                    <xsd:attribute name="entity-manager" use="optional" type="xsd:string">
                        <xsd:annotation>
                            <xsd:documentation>Reference to an entity manager to use with this event store.
                            </xsd:documentation>
                        </xsd:annotation>
                    </xsd:attribute>
                    <xsd:attribute name="data-source" use="optional" type="xsd:string">
                        <xsd:annotation>
                            <xsd:documentation>Data Source that provides access to the backing database. This data
                                source is used to detect database type, and define which error codes represent
                                concurrency related errors.
                            </xsd:documentation>
                        </xsd:annotation>
                    </xsd:attribute>
                    <xsd:attribute name="persistence-exception-resolver" use="optional" type="xsd:string">
                        <xsd:annotation>
                            <xsd:documentation>Sets the persistence exception resolver to use to detect concurrency
                                related errors in database generated exceptions.
                            </xsd:documentation>
                        </xsd:annotation>
                    </xsd:attribute>
                </xsd:extension>
            </xsd:complexContent>
        </xsd:complexType>
    </xsd:element>

    <!-- ================================== -->
    <!-- == repository ==================== -->
    <!-- ================================== -->

    <xsd:element name="event-sourcing-repository">
        <xsd:annotation>
            <xsd:documentation>Spring context schema extension for the definition of a Repository instance.
            </xsd:documentation>
        </xsd:annotation>
        <xsd:complexType>
            <xsd:complexContent>
                <xsd:extension base="beans:identifiedType">
                    <xsd:all>
                        <xsd:element name="snapshotter-trigger" minOccurs="0" maxOccurs="1">
                            <xsd:complexType>
                                <xsd:complexContent>
                                    <xsd:extension base="beans:identifiedType">
                                        <xsd:attribute name="event-count-threshold" use="required"
                                                       type="xsd:positiveInteger"/>
                                        <xsd:attribute name="snapshotter-ref" use="required" type="xsd:string"/>
                                    </xsd:extension>
                                </xsd:complexContent>
                            </xsd:complexType>
                        </xsd:element>
                        <xsd:element name="event-processors" type="beans:listOrSetType" minOccurs="0" maxOccurs="1">
                            <xsd:annotation>
                                <xsd:documentation>A list of processors that get access to raw event data as it read or
                                    written to the event stream.
                                </xsd:documentation>
                            </xsd:annotation>
                        </xsd:element>
                    </xsd:all>
                    <xsd:attribute name="aggregate-type" type="xsd:string" use="required">
                        <xsd:annotation>
                            <xsd:documentation>The fully qualified class name of the AggregateRoot type that this
                                repository will store.
                            </xsd:documentation>
                        </xsd:annotation>
                    </xsd:attribute>
                    <xsd:attribute name="locking-strategy" use="optional" default="PESSIMISTIC">
                        <xsd:annotation>
                            <xsd:documentation>The locking strategy used by this repository (default: PESSIMISTIC).
                            </xsd:documentation>
                        </xsd:annotation>
                        <xsd:simpleType>
                            <xsd:restriction base="xsd:string">
                                <xsd:enumeration value="OPTIMISTIC"/>
                                <xsd:enumeration value="PESSIMISTIC"/>
                                <xsd:enumeration value="NO_LOCKING"/>
                            </xsd:restriction>
                        </xsd:simpleType>
                    </xsd:attribute>
                    <xsd:attribute name="event-store" use="optional" type="xsd:string">
                        <xsd:annotation>
                            <xsd:documentation>Reference to the EventStore used by this repository.</xsd:documentation>
                        </xsd:annotation>
                    </xsd:attribute>
                    <xsd:attribute name="event-bus" use="optional" type="xsd:string">
                        <xsd:annotation>
                            <xsd:documentation>Reference to the EventBus used by this repository.</xsd:documentation>
                        </xsd:annotation>
                    </xsd:attribute>
                    <xsd:attribute name="conflict-resolver" use="optional" type="xsd:string">
                        <xsd:annotation>
                            <xsd:documentation>Reference to the ConflictResolver used by this repository.
                            </xsd:documentation>
                        </xsd:annotation>
                    </xsd:attribute>
                    <xsd:attribute name="cache-ref" use="optional" type="xsd:string">
                        <xsd:annotation>
                            <xsd:documentation>Reference to the cache that stores aggregates.</xsd:documentation>
                        </xsd:annotation>
                    </xsd:attribute>
                </xsd:extension>
            </xsd:complexContent>
        </xsd:complexType>
    </xsd:element>

    <!-- ================================== -->
    <!-- == repository ==================== -->
    <!-- ================================== -->

    <xsd:element name="saga-manager">
        <xsd:annotation>
            <xsd:documentation>Definition of the saga manager</xsd:documentation>
        </xsd:annotation>
        <xsd:complexType>
            <xsd:complexContent>
                <xsd:extension base="beans:identifiedType">
                    <xsd:all>
                        <xsd:element name="types" type="xsd:string">
                            <xsd:annotation>
                                <xsd:documentation>A comma separated list of fully qualified class names of the sagas
                                    this manager should manage.
                                </xsd:documentation>
                            </xsd:annotation>
                        </xsd:element>
                    </xsd:all>
                    <xsd:attribute name="saga-factory" use="optional" type="xsd:string">
                        <xsd:annotation>
                            <xsd:documentation>Reference to the saga factory to use. Defaults to the GenericSagaFactory,
                                which requires a default (no-arg) constructor.
                            </xsd:documentation>
                        </xsd:annotation>
                    </xsd:attribute>
                    <xsd:attribute name="resource-injector" use="optional" type="xsd:string">
                        <xsd:annotation>
                            <xsd:documentation>Reference to the resource injector to inject required resources in saga
                                instances. Defaults to a SpringSagaResourceInjector, which autowires sagas using
                                the Spring Application Context.
                            </xsd:documentation>
                        </xsd:annotation>
                    </xsd:attribute>
                    <xsd:attribute name="event-bus" use="optional" type="xsd:string">
                        <xsd:annotation>
                            <xsd:documentation>Reference to the resource injector to inject required resources in saga
                                instances. Defaults to a SpringSagaResourceInjector, which autowires sagas using
                                the Spring Application Context.
                            </xsd:documentation>
                        </xsd:annotation>
                    </xsd:attribute>
                    <xsd:attribute name="saga-repository" use="optional" type="xsd:string">
                        <xsd:annotation>
                            <xsd:documentation>Reference to the saga repository to use. Defaults to an in-memory saga
                                repository. Note that sagas will not survive an application restart when using these
                                defaults.
                            </xsd:documentation>
                        </xsd:annotation>
                    </xsd:attribute>
                    <xsd:attribute name="transaction-manager" use="optional" type="xsd:string">
                        <xsd:annotation>
                            <xsd:documentation>Reference to the PlatformTransactionManager that manages the transactions
                                while reading, processing and persisting Sagas. Is ignored unless used in combination
                                with the executor property.
                            </xsd:documentation>
                        </xsd:annotation>
                    </xsd:attribute>
                    <xsd:attribute name="executor" use="optional" type="xsd:string">
                        <xsd:annotation>
                            <xsd:documentation>Reference to an Executor (e.g. TaskExecutor) instance that provides the
                                threads to process the incoming Events in. If an executor is provided, all event
                                handling is done asynchronously using this executor.
                            </xsd:documentation>
                        </xsd:annotation>
                    </xsd:attribute>
                </xsd:extension>
            </xsd:complexContent>
        </xsd:complexType>
    </xsd:element>
</xsd:schema>